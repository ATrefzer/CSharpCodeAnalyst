<Window x:Class="CSharpCodeAnalyst.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:analyst="clr-namespace:CSharpCodeAnalyst"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:resources="clr-namespace:CSharpCodeAnalyst.Resources"
        xmlns:graphArea="clr-namespace:CSharpCodeAnalyst.Areas.GraphArea"
        xmlns:infoArea="clr-namespace:CSharpCodeAnalyst.Areas.InfoArea"
        xmlns:dynamicDataGrid1="clr-namespace:CSharpCodeAnalyst.Shared.DynamicDataGrid"
        xmlns:treeArea="clr-namespace:CSharpCodeAnalyst.Areas.TreeArea"
        x:Name="RootWindow"
        Closing="RootWindow_Closing"
        Title="{x:Static resources:Strings.AppTitle}" Height="520" Width="1200"
        d:DataContext="{d:DesignInstance analyst:MainViewModel}"
        KeyDown="OnKeyDown">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/ButtonStyles.xaml" />
                <ResourceDictionary Source="Styles/DataGridStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Ribbon>
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu>

                    <RibbonApplicationMenuItem Header="{x:Static resources:Strings.Settings_Header}"
                                               Command="{Binding OpenSettingsDialogCommand}"
                                               ToolTip="Open application settings dialog"
                                               ImageSource="/Resources/slider.png" />

                    <RibbonApplicationMenuItem Header="{x:Static resources:Strings.Exit_Header}" Click="Exit_Click" />


                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <RibbonTab Header="Home">
                <RibbonGroup Header="{x:Static resources:Strings.File_Header}"
                             LargeImageSource="/Resources/save_project.png">
                    <RibbonSplitButton Label="Import"
                                       LargeImageSource="/Resources/import_solution.png"
                                       Command="{Binding LoadSolutionCommand}">
                        <RibbonMenuItem Header="{x:Static resources:Strings.ImportSolution_Label}"
                                        ImageSource="/Resources/import_solution.png"
                                        Command="{Binding LoadSolutionCommand}" />
                        <RibbonMenuItem Header="Import from jdeps"
                                        ImageSource="/Resources/import_solution.png"
                                        Command="{Binding ImportJdepsCommand}" />
                    </RibbonSplitButton>

                    <RibbonButton Label="{x:Static resources:Strings.ProjectFilter_Label}"
                                  LargeImageSource="/Resources/filter_32.png"
                                  Command="{Binding OpenFilterDialogCommand}">
                        <RibbonButton.ToolTip>
                            <ToolTip Content="{x:Static resources:Strings.ProjectFilter_Tooltip}" />
                        </RibbonButton.ToolTip>
                    </RibbonButton>

                    <RibbonButton Label="{x:Static resources:Strings.LoadProject_Label}"
                                  LargeImageSource="/Resources/load_project.png"
                                  Command="{Binding LoadProjectCommand}" />
                    <RibbonButton Label="{x:Static resources:Strings.SaveProject_Label}"
                                  LargeImageSource="/Resources/save_project.png"
                                  Command="{Binding SaveProjectCommand}" />

                </RibbonGroup>

                <RibbonGroup Header="Tools" LargeImageSource="/Resources/cycle_32.png">
                    <RibbonButton Label="{x:Static resources:Strings.Find_Cycles_Label}"
                                  LargeImageSource="/Resources/cycle_32.png"
                                  Command="{Binding FindCyclesCommand}" />

                    <RibbonSplitButton Label="{x:Static resources:Strings.Analyzers_Label}"
                                       LargeImageSource="/Resources/analysis_32.png"
                                       ItemsSource="{Binding Analyzers}">

                        <!-- Integrate analyzers -->
                        <RibbonSplitButton.ItemContainerStyle>
                            <Style TargetType="RibbonMenuItem">
                                <Setter Property="Header" Value="{Binding Name}" />
                                <Setter Property="ToolTip" Value="{Binding Description}" />
                                <Setter Property="ImageSource" Value="/Resources/analysis_32.png" />
                                <Setter Property="Command"
                                        Value="{Binding DataContext.ExecuteAnalyzerCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                                <Setter Property="CommandParameter" Value="{Binding Id}" />
                            </Style>
                        </RibbonSplitButton.ItemContainerStyle>
                    </RibbonSplitButton>

                </RibbonGroup>


                <RibbonGroup Header="{x:Static resources:Strings.CodeExplorer_Header}"
                             LargeImageSource="/Resources/four-arrows_32.png">
                    <RibbonButton Label="{x:Static resources:Strings.Clear_Label}"
                                  LargeImageSource="/Resources/trash-can_32.png"
                                  Command="{Binding GraphClearCommand}">
                        <RibbonButton.ToolTip>
                            <ToolTip Content="{x:Static resources:Strings.Clear_Tooltip}" />
                        </RibbonButton.ToolTip>
                    </RibbonButton>

                    <RibbonButton Label="{x:Static resources:Strings.HideFilter_Label}"
                                  LargeImageSource="/Resources/filter_32.png"
                                  Command="{Binding GraphViewModel.OpenGraphHideDialogCommand}">
                        <RibbonButton.ToolTip>
                            <ToolTip Content="{x:Static resources:Strings.HideFilter_Tooltip}" />
                        </RibbonButton.ToolTip>
                    </RibbonButton>

                    <RibbonButton Label="{x:Static resources:Strings.Layout_Label}"
                                  LargeImageSource="/Resources/four-arrows_32.png"
                                  Command="{Binding GraphLayoutCommand}">
                        <RibbonButton.ToolTip>
                            <ToolTip Content="{x:Static resources:Strings.Layout_Tooltip}" />
                        </RibbonButton.ToolTip>
                    </RibbonButton>


                    <RibbonSplitButton Label="Export"
                                       LargeImageSource="/Resources/document-xml_32.png"
                                       Command="{Binding ExportToDgmlCommand}">

                        <RibbonMenuItem Header="{x:Static resources:Strings.ExportDgml_Label}"
                                        ImageSource="/Resources/document-xml_32.png"
                                        ToolTip="{x:Static resources:Strings.ExportDgml_Tooltip}"
                                        Command="{Binding ExportToDgmlCommand}" />

                        <RibbonMenuItem Header="{x:Static resources:Strings.SavePng_Label}"
                                        ImageSource="/Resources/png-file_32.png"
                                        ToolTip="{x:Static resources:Strings.SavePng_Tooltip}"
                                        Command="{Binding ExportToPngCommand}"
                                        CommandParameter="{Binding ElementName=ExplorationControl}" />

                        <!--<RibbonMenuItem Header="{x:Static resources:Strings.ExportDsi_Label}"
                                        ImageSource="/Resources/spreadsheet_32.png"
                                        ToolTip="{x:Static resources:Strings.ExportDsi_Tooltip}"
                                        Command="{Binding ExportToDsiCommand}"/>-->

                        <RibbonMenuItem Header="{x:Static resources:Strings.ExportSvg_Label}"
                                        ImageSource="/Resources/svg-file_32.png"
                                        ToolTip="{x:Static resources:Strings.ExportSvg_Tooltip}"
                                        Command="{Binding ExportToSvgCommand}" />

                        <RibbonSeparator />

                        <RibbonMenuItem Header="{x:Static resources:Strings.ExportPlantUml_Label}"
                                        ImageSource="/Resources/document-xml_32.png"
                                        ToolTip="{x:Static resources:Strings.ExportPlantUml_Tooltip}"
                                        Command="{Binding ExportToPlantUmlCommand}" />

                        <RibbonMenuItem Header="{x:Static resources:Strings.Copy_Clipboard_Label}"
                                        ImageSource="/Resources/png-file_32.png"
                                        ToolTip="{x:Static resources:Strings.Copy_Clipboard_Tooltip}"
                                        Command="{Binding CopyToClipboardCommand}"
                                        CommandParameter="{Binding ElementName=ExplorationControl}" />


                    </RibbonSplitButton>

                    <RibbonButton Label="{x:Static resources:Strings.Undo_Label}"
                                  LargeImageSource="/Resources/undo_32.png"
                                  Command="{Binding GraphViewModel.UndoCommand}">
                        <RibbonButton.ToolTip>
                            <ToolTip Content="{x:Static resources:Strings.Undo_Tooltip}" />
                        </RibbonButton.ToolTip>
                    </RibbonButton>

                    <RibbonButton Label="{x:Static resources:Strings.Gallery_Label}"
                                  LargeImageSource="/Resources/document_graph_32.png"
                                  Command="{Binding ShowGalleryCommand}">
                        <RibbonButton.ToolTip>
                            <ToolTip Content="{x:Static resources:Strings.Gallery_Tooltip}" />
                        </RibbonButton.ToolTip>
                    </RibbonButton>


                </RibbonGroup>

                <!-- Rendering -->
                <RibbonGroup Header="{x:Static resources:Strings.Settings_Rendering}"
                             LargeImageSource="Resources/rendering.png">

                    <Grid Margin="0, 0, 0, 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" /> <!-- Label -->
                            <ColumnDefinition Width="Auto" /> <!-- Drop Down -->
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />

                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <RibbonToggleButton HorizontalAlignment="Left"
                                            Grid.Row="0" Grid.Column="0"
                                            Label="{x:Static resources:Strings.Flow_Label}"
                                            SmallImageSource="/Resources/guidepost_small.png"
                                            IsChecked="{Binding GraphViewModel.ShowDataFlow, Mode=TwoWay}">
                            <RibbonToggleButton.ToolTip>
                                <ToolTip Content="{x:Static resources:Strings.Flow_Tooltip}" />
                            </RibbonToggleButton.ToolTip>
                        </RibbonToggleButton>


                        <RibbonToggleButton Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left"
                                            Label="{x:Static resources:Strings.FlatGraph_Label}"
                                            SmallImageSource="/Resources/left-right_small.png"
                                            IsChecked="{Binding GraphViewModel.ShowFlatGraph, Mode=TwoWay}">
                            <RibbonToggleButton.ToolTip>
                                <ToolTip Content="{x:Static resources:Strings.FlatGraph_Tooltip}" />
                            </RibbonToggleButton.ToolTip>
                        </RibbonToggleButton>


                        <TextBlock VerticalAlignment="Center"
                                   Grid.Row="0" Grid.Column="2"
                                   Text="{x:Static resources:Strings.Rendering_Label}" />
                        <ComboBox VerticalAlignment="Center" Height="22" Margin="5,2,2,2" Padding="4,0,4,0"
                                  VerticalContentAlignment="Center"
                                  Grid.Row="0" Grid.Column="3"
                                  ItemsSource="{Binding GraphViewModel.RenderOptions}"
                                  SelectedItem="{Binding GraphViewModel.SelectedRenderOption}" />
                        <TextBlock VerticalAlignment="Center"
                                   Grid.Row="1" Grid.Column="2"
                                   Text="{x:Static resources:Strings.Highlighting_Label}" />
                        <ComboBox VerticalAlignment="Center"
                                  Height="22" Margin="5,2,2,2" Padding="4,0,4,0"
                                  VerticalContentAlignment="Center"
                                  Grid.Row="1" Grid.Column="3"
                                  ItemsSource="{Binding GraphViewModel.HighlightOptions}"
                                  SelectedItem="{Binding GraphViewModel.SelectedHighlightOption}" />
                    </Grid>
                </RibbonGroup>


                <!-- Help Ribbon Group -->
                <RibbonGroup Header="{x:Static resources:Strings.Help_Header}"
                             LargeImageSource="/Resources/help_32.png">
                    <RibbonButton Label="{x:Static resources:Strings.Legend_Label}"
                                  LargeImageSource="/Resources/legend_32.png"

                                  Command="{Binding ShowLegendCommand}">
                        <RibbonButton.ToolTip>
                            <ToolTip Content="{x:Static resources:Strings.Legend_Tooltip}" />
                        </RibbonButton.ToolTip>
                    </RibbonButton>
                </RibbonGroup>


            </RibbonTab>
        </Ribbon>

        <Grid Grid.Row="1" x:Name="SplitterGrid">
            <Grid.ColumnDefinitions>


                <ColumnDefinition x:Name="SplitterColumn" Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Navigation area -->
            <Expander Grid.Column="0" ExpandDirection="Right" IsExpanded="{Binding IsLeftPanelExpanded}"
                      x:Name="LeftExpander"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Collapsed="LeftExpander_Collapsed">
                <Expander.Header>
                    <TextBlock Text="{x:Static resources:Strings.CodeStructure_Header}" FontWeight="Bold">
                        <TextBlock.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Expander.Header>

                <Expander.Style>
                    <Style TargetType="Expander">
                        <Setter Property="MinWidth"
                                Value="{x:Static analyst:Constants.TreeMinWidthCollapsed}" />
                        <Style.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="MinWidth"
                                        Value="{x:Static analyst:Constants.TreeMinWidthExpanded}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>

                <TabControl x:Name="CodeStructureTab"
                            SelectedIndex="{Binding SelectedLeftTabIndex}"
                            Visibility="{Binding IsLeftPanelExpanded, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Margin="0">

                    <!-- Tree View Tab -->
                    <TabItem Header="Tree View">
                        <treeArea:TreeControl  x:Name="TreeControl" DataContext="{Binding TreeViewModel}"/>
                    </TabItem>

                    <!-- Search Tab -->
                    <TabItem Header="Advanced Search">
                        <Grid DataContext="{Binding SearchViewModel}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Search Box Area -->
                            <DockPanel Grid.Row="0" Margin="5" Background="LightYellow">
                                <Button Command="{Binding ClearSearchCommand}"
                                        ToolTip="{x:Static resources:Strings.ClearSearch_Tooltip}"
                                        DockPanel.Dock="Right"
                                        Width="22" Height="22" Margin="2,0,0,0">
                                    <Image Source="Resources/clear_32.png" />
                                </Button>
                                <TextBox DockPanel.Dock="Left" Height="22"
                                         Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                         Margin="0"
                                         Background="LightYellow"
                                         FontSize="12"
                                         ToolTip="{x:Static resources:Strings.SearchPattern_Tooltip}" />
                            </DockPanel>

                            <!-- Results List -->
                            <DataGrid Grid.Row="1"
                                      x:Name="SearchDataGrid"
                                      Style="{StaticResource ReadOnlyGrid}"
                                      ItemsSource="{Binding FilteredItems}"
                                      AutoGenerateColumns="False"
                                      GridLinesVisibility="Horizontal"
                                      SelectionMode="Extended"
                                      Margin="5,0,5,0">
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static resources:Strings.AddSelectedToGraph_Label}"
                                                  Command="{Binding AddSelectedToGraphCommand}"
                                                  CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        <MenuItem
                                            Header="{x:Static resources:Strings.AddSelectedToGraphCollapsed_Label}"
                                            Command="{Binding AddSelectedToGraphCollapsedCommand}"
                                            CommandParameter="{Binding PlacementTarget.SelectedItems, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />

                                        <Separator />
                                        <MenuItem Header="{x:Static resources:Strings.Partition}"
                                                  Command="{Binding PartitionCommand}"
                                                  CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                        <Separator />

                                        <MenuItem Header="{x:Static resources:Strings.CopyToClipboard}"
                                                  Command="{Binding CopyToClipboardCommand}"
                                                  CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />


                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="{x:Static resources:Strings.Type_Label}"
                                                            Width="Auto">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Source="{Binding Icon}" Width="16" Height="16"
                                                       ToolTip="{Binding Type}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Header="{x:Static resources:Strings.Name_Label}"
                                                        Binding="{Binding Name}"
                                                        Width="Auto" />


                                    <DataGridTextColumn Header="{x:Static resources:Strings.FullPath_Label}"
                                                        Binding="{Binding FullPath}"
                                                        Width="Auto" />
                                </DataGrid.Columns>
                            </DataGrid>

                            <!-- Button Area -->
                            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Main Button -->
                                    <Button Grid.Column="0"
                                            Content="{x:Static resources:Strings.AddSelectedToGraph_Label}"
                                            Command="{Binding AddSelectedToGraphCommand}"
                                            CommandParameter="{Binding SelectedItems, ElementName=SearchDataGrid}"
                                            FontWeight="Bold"
                                            Padding="15,5" />

                                    <!-- Dropdown Button -->
                                    <Button Grid.Column="1"
                                            Content="▼"
                                            FontSize="8"
                                            Width="20"
                                            Padding="0"
                                            x:Name="DropdownButton">
                                        <Button.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem
                                                    Header="{x:Static resources:Strings.AddSelectedToGraphCollapsed_Label}"
                                                    Command="{Binding AddSelectedToGraphCollapsedCommand}"
                                                    CommandParameter="{Binding Path=Tag.SelectedItems, RelativeSource={RelativeSource Self}}" />
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <EventSetter Event="Click" Handler="DropdownButton_Click" />
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </TabItem>

                    <!-- Info Panel -->
                    <TabItem Header="{x:Static resources:Strings.InfoPanel_TabHeader}">

                        <!-- Info panel -->
                        <infoArea:InfoPanel
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            DataContext="{Binding InfoPanelViewModel}" />
                    </TabItem>

                </TabControl>
            </Expander>

            <!-- If the expander is collapse we don't show the splitter-->
            <GridSplitter Grid.Column="1"
                          Width="5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch"
                          ShowsPreview="False"
                          DragDelta="GridSplitter_DragDelta"
                          Visibility="{Binding IsExpanded, ElementName=LeftExpander, Converter={StaticResource BooleanToVisibilityConverter}}" />


            <!-- Without ClipToBounds we can draw the nodes over the tree and ribbon.-->
            <TabControl Grid.Column="2" SelectedIndex="{Binding SelectedRightTabIndex}" x:Name="WorkingArea">
                <TabItem>
                    <TabItem.Header>Code Explorer</TabItem.Header>
                    <graphArea:CodeExplorerControl x:Name="ExplorationControl" />
                </TabItem>

                <!--<TabItem Header="{Binding TableViewModel.Title}">
                    <Grid DataContext="{Binding TableViewModel}">
                        <ContentPresenter Content="{Binding }" />
                    </Grid>
                </TabItem>-->

                <TabItem Header="{x:Static resources:Strings.Tab_Cycles}">
                    <dynamicDataGrid1:DynamicDataGrid TableData="{Binding Cycles}" />
                </TabItem>

                <TabItem Header="{x:Static resources:Strings.Tab_Analyzer}">
                    <dynamicDataGrid1:DynamicDataGrid TableData="{Binding AnalyzerResult}" />
                </TabItem>

                <TabItem Header="{x:Static resources:Strings.Metrics_TabHeader}">
                    <dynamicDataGrid1:DynamicDataGrid SelfDescribingData="{Binding Metrics}" />
                </TabItem>
            </TabControl>


        </Grid>


        <!-- Loading Overlay -->
        <Grid Grid.Row="0" Grid.RowSpan="2"
              Background="#80000000"
              Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Text="{Binding LoadMessage}" Foreground="White" FontSize="16" Margin="0,0,0,10" />
                <ProgressBar IsIndeterminate="True" Width="200" Height="20" />
            </StackPanel>
        </Grid>

        <!-- Toast Notification Container -->
        <Canvas x:Name="ToastContainer"
                Grid.Row="0" Grid.RowSpan="2"
                IsHitTestVisible="False" />
    </Grid>
</Window>